### Trainning 
TuneRunConfig:
  # (dict | callable | Stopper) – Stopping criteria. If dict, the keys may be any field in the return result of ‘train()’, 
  # whichever is reached first. If function, it must take (trial_id, result) as arguments and return a boolean 
  # (True if trial should be stopped, False otherwise). This can also be a subclass of ray.tune.Stopper, 
  # which allows users to implement custom experiment-wide stopping (i.e., stopping an entire Tune run based on some time constraint).
  stop: 
    timesteps_total: 1000000

  # (str) – Local dir to save training results to. Defaults to ~/ray_results.
  local_dir: "./Logs/Agent"

  # (int) – How many training iterations between checkpoints. A value of 0 (default) disables checkpointing.
  checkpoint_freq: 10000

  # (bool) – Whether to checkpoint at the end of the experiment regardless of the checkpoint_freq. Default is False.
  checkpoint_at_end: True

  # (int) – Number of checkpoints to keep. A value of None keeps all checkpoints. Defaults to None. If set, need to provide checkpoint_score_attr.
  keep_checkpoints_num: None 

  # (str) – Specifies by which attribute to rank the best checkpoint. Default is increasing order. If attribute starts with min- it will rank attribute in decreasing order, i.e. min-validation_loss.
  checkpoint_score_attr: "increasing order"

  # (list) – List of formats that exported at the end of the experiment. Default is None. Types: ['h5', ...]
  export_formats: ['h5']



Environment:
  # (str) – Location of the Environment Configuration files. Default set to "./TrainningConfigurations/Environment_Config"
  dir_loc: "./TrainningConfigurations/Environment_Config"
  # (List[str]) – List of envirnments to be trainned in sequence carrying the weights. ["Env_1"]
  Trianning_Env: ["Env_1", "Env_2", "Env_3", "Env_4"]

Agent:
  # (str) – Location of the Environment Configuration files. Default set to "./TrainningConfigurations/Agent_Config"
  dir_loc: "./TrainningConfigurations/Agent_Config"
  # (List[str]) – List of envirnments to be trainned in sequence carrying the weights. ["Env_1"]
  Trianning_Env: ["Env_1", "Env_2", "Env_3", "Env_4"]
