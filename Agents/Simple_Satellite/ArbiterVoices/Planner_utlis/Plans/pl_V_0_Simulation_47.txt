Number of literals: 343
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var4(image_score img5)
- Must be >= -15.000
Recognised a monotonic-change-induced limit on -1.000*var5(image_score img6)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var6(image_score img7)
- Must be >= -15.000
Recognised a monotonic-change-induced limit on -1.000*var7(image_score img8)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var9(image_score img10)
- Must be >= -14.000
Recognised a monotonic-change-induced limit on -1.000*var11(image_score img12)
- Must be >= -14.000
Recognised a monotonic-change-induced limit on -1.000*var14(image_score img15)
- Must be >= -5.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 50.000, admissible cost estimate nan
b (49.000 | 21.000)b (48.000 | 35.001)b (47.000 | 67.002)b (46.000 | 67.002)b (44.000 | 204.000)b (43.000 | 249.000)b (42.000 | 263.001)b (41.000 | 295.002)b (40.000 | 295.002)b (39.000 | 295.002)b (38.000 | 337.001)b (37.000 | 369.001)b (36.000 | 428.001)b (35.000 | 460.001)b (34.000 | 460.001)b (33.000 | 474.003)b (31.000 | 474.003)b (30.000 | 630.001)b (28.000 | 630.001)b (25.000 | 644.002)b (24.000 | 644.002)b (23.000 | 658.002)b (22.000 | 690.003)b (21.000 | 704.005)b (20.000 | 736.006)b (19.000 | 736.006)b (18.000 | 810.001)b (16.000 | 810.001)b (14.000 | 1014.000)b (13.000 | 1064.000)b (12.000 | 1078.001)b (11.000 | 1110.002)b (10.000 | 1156.000)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (49.000 | 21.000)b (48.000 | 35.001)b (47.000 | 67.002)b (46.000 | 67.002)b (45.000 | 263.001)b (45.000 | 256.000)b (44.000 | 263.001)b (43.000 | 295.002)b (42.000 | 295.002)b (41.000 | 328.001)b (40.000 | 360.003)b (39.000 | 360.003)b (38.000 | 460.001)b (37.000 | 460.001)b (36.000 | 474.003)b (34.000 | 474.003)b (33.000 | 630.001)b (31.000 | 630.001)b (30.000 | 644.002)b (28.000 | 644.002)b (27.000 | 697.001)b (27.000 | 685.000)b (26.000 | 697.001)b (25.000 | 729.002)b (24.000 | 810.001)b (22.000 | 810.001)
END