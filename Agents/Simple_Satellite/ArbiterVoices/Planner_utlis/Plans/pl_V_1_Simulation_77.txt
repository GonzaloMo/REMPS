Number of literals: 563
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(image_score img16) has a finite lower bound: [0.000,inf]
(image_score img17) has a finite lower bound: [0.000,inf]
(image_score img18) has a finite lower bound: [0.000,inf]
(image_score img19) has a finite lower bound: [0.000,inf]
(image_score img20) has a finite lower bound: [0.000,inf]
(image_score img21) has a finite lower bound: [0.000,inf]
(image_score img22) has a finite lower bound: [0.000,inf]
(image_score img23) has a finite lower bound: [0.000,inf]
(image_score img24) has a finite lower bound: [0.000,inf]
(image_score img25) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var0(image_score img1)
- Must be >= -3.000
Recognised a monotonic-change-induced limit on -1.000*var1(image_score img2)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var3(image_score img4)
- Must be >= -3.000
Recognised a monotonic-change-induced limit on -1.000*var5(image_score img6)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var6(image_score img7)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var9(image_score img10)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var10(image_score img11)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var11(image_score img12)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var12(image_score img13)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var13(image_score img14)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var15(image_score img16)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var16(image_score img17)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var21(image_score img22)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var23(image_score img24)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var24(image_score img25)
- Must be >= -4.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 99.000, admissible cost estimate nan
b (98.000 | 8.000)b (97.000 | 22.000)b (96.000 | 54.001)b (95.000 | 54.001)b (94.000 | 69.001)b (93.000 | 101.002)b (92.000 | 101.002)b (91.000 | 101.002)b (89.000 | 115.003)b (87.000 | 115.003)b (86.000 | 129.003)b (85.000 | 161.005)b (84.000 | 161.005)b (83.000 | 208.002)b (82.000 | 208.002)b (81.000 | 222.003)b (80.000 | 254.004)b (79.000 | 254.004)b (78.000 | 254.004)b (77.000 | 270.001)b (75.000 | 270.001)b (73.000 | 284.001)b (71.000 | 284.002)b (69.000 | 298.003)b (67.000 | 298.003)b (66.000 | 335.001)b (65.000 | 367.001)b (64.000 | 367.001)b (63.000 | 384.001)b (62.000 | 416.001)b (61.000 | 416.001)b (60.000 | 440.001)b (59.000 | 472.001)b (58.000 | 472.001)b (57.000 | 472.001)b (55.000 | 486.003)b (53.000 | 486.003)b (52.000 | 550.002)b (51.000 | 550.002)b (50.000 | 564.002)b (49.000 | 596.003)b (48.000 | 596.003)b (47.000 | 596.003)b (46.000 | 630.001)b (44.000 | 630.001)b (42.000 | 644.002)b (40.000 | 644.002)b (38.000 | 658.002)b (36.000 | 658.003)b (35.000 | 713.001)b (34.000 | 745.002)b (33.000 | 756.000)b (32.000 | 770.001)b (31.000 | 802.002)b (30.000 | 802.002)b (29.000 | 802.002)b (27.000 | 816.002)b (25.000 | 816.003)b (23.000 | 830.004)b (22.000 | 844.005)b (21.000 | 844.005)b (20.000 | 941.001)b (19.000 | 973.002)b (17.000 | 990.001)b (15.000 | 1004.002)b (14.000 | 1165.001)b (13.000 | 1197.002)b (12.000 | 1197.002)b (11.000 | 1197.002)b (10.000 | 1211.003)b (9.000 | 1243.004)b (8.000 | 1306.001)b (7.000 | 1338.002)b (6.000 | 1338.002)b (4.000 | 1352.003)b (2.000 | 1366.004)(G)
; LP calculated the cost

; Plan found with metric 15.000
; States evaluated so far: 297
; States pruned based on pre-heuristic cost lower bound: 0
; Time 1.57
8.001: (take_image img18 mem0)  [14.000]
22.002: (analyse_image img18 mem0)  [32.000]
55.001: (take_image img11 mem1)  [14.000]
69.002: (analyse_image img11 mem1)  [32.000]
101.003: (dump_image img11 mem1)  [14.000]
115.004: (take_image img13 mem2)  [14.000]
129.005: (analyse_image img13 mem2)  [32.000]
167.997: (take_image img2 mem1)  [14.000]
181.998: (analyse_image img2 mem1)  [32.000]
213.999: (take_image img22 mem3)  [14.000]
228.000: (analyse_image img22 mem3)  [32.000]
265.997: (dump_image img22 mem3)  [14.000]
279.998: (dump_image img13 mem2)  [14.000]
293.999: (dump_image img2 mem1)  [14.000]
321.001: (take_image img16 mem1)  [14.000]
335.002: (analyse_image img16 mem1)  [32.000]
377.999: (take_image img24 mem2)  [14.000]
395.996: (analyse_image img24 mem2)  [32.000]
427.997: (take_image img1 mem3)  [14.000]
441.998: (analyse_image img1 mem3)  [32.000]
473.999: (dump_image img1 mem3)  [14.000]
504.001: (take_image img6 mem3)  [14.000]
518.002: (analyse_image img6 mem3)  [32.000]
550.003: (take_image img17 mem4)  [14.000]
564.004: (analyse_image img17 mem4)  [32.000]
625.997: (dump_image img17 mem4)  [14.000]
639.998: (dump_image img6 mem3)  [14.000]
653.999: (dump_image img24 mem2)  [14.000]
699.001: (take_image img25 mem2)  [14.000]
713.002: (analyse_image img25 mem2)  [32.000]
756.001: (take_image img12 mem3)  [14.000]
770.002: (analyse_image img12 mem3)  [32.000]
805.997: (dump_image img12 mem3)  [14.000]
819.998: (dump_image img16 mem1)  [14.000]
833.999: (dump_image img18 mem0)  [14.000]
927.001: (take_image img10 mem0)  [14.000]
941.002: (analyse_image img10 mem0)  [32.000]
976.001: (dump_image img25 mem2)  [14.000]
1013.999: (dump_image img10 mem0)  [14.000]
1151.001: (take_image img14 mem0)  [14.000]
1165.002: (analyse_image img14 mem0)  [32.000]
1197.003: (take_image img4 mem1)  [14.000]
1211.004: (analyse_image img4 mem1)  [32.000]
1292.001: (take_image img7 mem2)  [14.000]
1306.002: (analyse_image img7 mem2)  [32.000]
1338.003: (dump_image img7 mem2)  [14.000]
1352.004: (dump_image img4 mem1)  [14.000]
1366.005: (dump_image img14 mem0)  [14.000]

Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (97.000 | 15.001)b (96.000 | 47.001)b (95.000 | 47.001)b (94.000 | 69.001)b (93.000 | 101.002)b (85.000 | 133.003)b (84.000 | 133.003)b (83.000 | 133.003)b (77.000 | 193.005)b (71.000 | 286.005)b (69.000 | 302.001)b (69.000 | 298.003)b (66.000 | 316.003)b (65.000 | 367.001)b (64.000 | 367.001)b (63.000 | 384.001)b (62.000 | 416.001)b (58.000 | 448.003)b (57.000 | 448.003)b (56.000 | 448.003)b (55.000 | 472.001)b (54.000 | 504.003)b (53.000 | 504.003)b (53.000 | 486.003)b (50.000 | 518.004)b (50.000 | 486.003)b (49.000 | 550.002)b (48.000 | 550.002)b (47.000 | 564.002)b (46.000 | 596.003)b (45.000 | 596.003)b (44.000 | 596.003)b (42.000 | 630.001)b (41.000 | 644.002)b (39.000 | 644.002)b (38.000 | 658.002)b (36.000 | 658.003)b (35.000 | 713.001)b (34.000 | 745.002)b (33.000 | 756.000)b (32.000 | 770.001)b (31.000 | 802.002)b (30.000 | 802.002)b (29.000 | 802.002)b (28.000 | 816.002)b (26.000 | 816.003)b (23.000 | 830.004)b (21.000 | 844.005)b (20.000 | 941.001)b (19.000 | 973.002)b (17.000 | 990.001)b (15.000 | 1004.002)b (14.000 | 1165.001)b (13.000 | 1197.002)b (12.000 | 1197.002)b (11.000 | 1197.002)b (10.000 | 1211.003)b (9.000 | 1243.004)b (8.000 | 1306.001)b (7.000 | 1338.002)b (6.000 | 1338.002)b (4.000 | 1352.003)b (2.000 | 1366.004)(G)b (0.000 | 1380.005)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)
END