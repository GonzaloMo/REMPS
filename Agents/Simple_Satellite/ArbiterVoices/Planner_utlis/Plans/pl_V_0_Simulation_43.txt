Number of literals: 343
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var0(image_score img1)
- Must be >= -14.000
Recognised a monotonic-change-induced limit on -1.000*var3(image_score img4)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var6(image_score img7)
- Must be >= -14.000
Recognised a monotonic-change-induced limit on -1.000*var8(image_score img9)
- Must be >= -3.000
Recognised a monotonic-change-induced limit on -1.000*var11(image_score img12)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var12(image_score img13)
- Must be >= -14.000
Recognised a monotonic-change-induced limit on -1.000*var14(image_score img15)
- Must be >= -12.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 49.000, admissible cost estimate nan
b (48.000 | 31.000)b (47.000 | 45.001)b (46.000 | 77.002)b (45.000 | 77.002)b (44.000 | 105.000)b (40.000 | 119.001)b (39.000 | 151.002)b (38.000 | 172.001)b (37.000 | 204.002)b (36.000 | 216.000)b (35.000 | 230.001)b (34.000 | 262.002)b (33.000 | 262.002)b (32.000 | 262.002)b (30.000 | 276.003)b (29.000 | 290.003)b (27.000 | 290.004)b (26.000 | 593.001)b (25.000 | 625.002)b (24.000 | 625.002)b (23.000 | 625.002)b (21.000 | 639.003)b (20.000 | 970.001)b (19.000 | 1002.002)b (18.000 | 1002.002)b (17.000 | 1016.002)b (15.000 | 1016.003)b (14.000 | 1332.001)b (13.000 | 1364.002)b (12.000 | 1364.002)b (11.000 | 1378.003)b (9.000 | 1378.003)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (48.000 | 31.000)b (47.000 | 45.001)b (46.000 | 77.002)b (45.000 | 77.002)b (44.000 | 105.000)b (43.000 | 119.001)b (42.000 | 151.002)b (41.000 | 172.001)b (40.000 | 204.002)b (39.000 | 216.000)b (38.000 | 230.001)b (38.000 | 219.000)b (37.000 | 230.001)b (36.000 | 262.002)b (35.000 | 262.002)b (33.000 | 276.003)b (32.000 | 290.003)b (30.000 | 290.004)b (29.000 | 304.005)b (27.000 | 304.005)b (26.000 | 593.001)b (25.000 | 625.002)b (24.000 | 625.002)b (23.000 | 625.002)b (21.000 | 639.003)b (20.000 | 970.001)b (19.000 | 1002.002)b (18.000 | 1002.002)b (17.000 | 1016.002)b (15.000 | 1016.003)b (14.000 | 1332.001)b (13.000 | 1364.002)b (12.000 | 1364.002)b (11.000 | 1378.003)b (9.000 | 1378.003)b (8.000 | 1549.003)
END