Number of literals: 563
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(image_score img16) has a finite lower bound: [0.000,inf]
(image_score img17) has a finite lower bound: [0.000,inf]
(image_score img18) has a finite lower bound: [0.000,inf]
(image_score img19) has a finite lower bound: [0.000,inf]
(image_score img20) has a finite lower bound: [0.000,inf]
(image_score img21) has a finite lower bound: [0.000,inf]
(image_score img22) has a finite lower bound: [0.000,inf]
(image_score img23) has a finite lower bound: [0.000,inf]
(image_score img24) has a finite lower bound: [0.000,inf]
(image_score img25) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var8(image_score img9)
- Must be >= -9.000
Recognised a monotonic-change-induced limit on -1.000*var11(image_score img12)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var13(image_score img14)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var17(image_score img18)
- Must be >= -7.000
Recognised a monotonic-change-induced limit on -1.000*var23(image_score img24)
- Must be >= -9.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 41.000, admissible cost estimate nan
b (40.000 | 16.000)b (30.000 | 30.001)b (29.000 | 62.001)b (28.000 | 76.000)b (25.000 | 107.000)b (24.000 | 129.001)b (23.000 | 161.002)b (22.000 | 163.000)b (21.000 | 177.001)b (20.000 | 209.002)b (19.000 | 209.002)b (18.000 | 270.001)b (16.000 | 270.001)b (14.000 | 450.001)b (13.000 | 474.000)b (12.000 | 536.000)b (11.000 | 550.001)b (10.000 | 582.002)b (9.000 | 582.002)b (8.000 | 630.001)b (7.000 | 676.002)b (5.000 | 810.001)b (4.000 | 932.001)b (3.000 | 964.002)b (2.000 | 976.000)(G)
; LP calculated the cost

; Plan found with metric 5.000
; States evaluated so far: 925
; States pruned based on pre-heuristic cost lower bound: 0
; Time 2.71
16.001: (take_image img14 mem0)  [14.000]
30.002: (analyse_image img14 mem0)  [32.000]
101.000: (dump_image img14 mem0)  [14.000]
115.001: (take_image img9 mem0)  [14.000]
129.002: (analyse_image img9 mem0)  [32.000]
170.999: (take_image img18 mem1)  [14.000]
185.000: (analyse_image img18 mem1)  [32.000]
256.001: (dump_image img18 mem1)  [14.000]
270.002: (dump_image img9 mem0)  [14.000]
284.003: (take_image img16 mem1)  [14.000]
298.004: (analyse_image img16 mem1)  [32.000]
473.999: (dump_image img16 mem1)  [14.000]
536.001: (take_image img24 mem0)  [14.000]
550.002: (analyse_image img24 mem0)  [32.000]
616.001: (dump_image img24 mem0)  [14.000]
630.002: (take_image img23 mem1)  [14.000]
644.003: (analyse_image img23 mem1)  [32.000]
833.999: (dump_image img23 mem1)  [14.000]
918.001: (take_image img12 mem0)  [14.000]
932.002: (analyse_image img12 mem0)  [32.000]
976.001: (dump_image img12 mem0)  [14.000]

Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (40.000 | 16.000)b (30.000 | 30.001)b (29.000 | 62.001)b (28.000 | 76.000)
END