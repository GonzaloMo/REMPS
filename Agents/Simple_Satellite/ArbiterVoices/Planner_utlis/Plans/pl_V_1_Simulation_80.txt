Number of literals: 563
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(image_score img16) has a finite lower bound: [0.000,inf]
(image_score img17) has a finite lower bound: [0.000,inf]
(image_score img18) has a finite lower bound: [0.000,inf]
(image_score img19) has a finite lower bound: [0.000,inf]
(image_score img20) has a finite lower bound: [0.000,inf]
(image_score img21) has a finite lower bound: [0.000,inf]
(image_score img22) has a finite lower bound: [0.000,inf]
(image_score img23) has a finite lower bound: [0.000,inf]
(image_score img24) has a finite lower bound: [0.000,inf]
(image_score img25) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var1(image_score img2)
- Must be >= -13.000
Recognised a monotonic-change-induced limit on -1.000*var4(image_score img5)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var9(image_score img10)
- Must be >= -11.000
Recognised a monotonic-change-induced limit on -1.000*var13(image_score img14)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var17(image_score img18)
- Must be >= -20.000
Recognised a monotonic-change-induced limit on -1.000*var23(image_score img24)
- Must be >= -6.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 55.000, admissible cost estimate nan
b (54.000 | 14.000)b (53.000 | 28.000)b (52.000 | 60.001)b (51.000 | 76.000)b (49.000 | 90.001)b (39.000 | 95.000)b (38.000 | 128.001)b (37.000 | 160.002)b (36.000 | 233.001)b (35.000 | 265.002)b (34.000 | 265.002)b (33.000 | 279.003)b (32.000 | 279.003)b (30.000 | 279.003)b (29.000 | 350.001)b (28.000 | 436.000)b (27.000 | 450.001)b (25.000 | 450.001)b (22.000 | 464.002)b (21.000 | 488.001)b (20.000 | 520.001)b (19.000 | 520.001)b (18.000 | 619.000)b (17.000 | 633.001)b (16.000 | 665.002)b (15.000 | 810.001)b (13.000 | 810.001)b (12.000 | 858.001)b (11.000 | 890.002)b (10.000 | 976.000)b (9.000 | 990.001)b (7.000 | 990.001)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (54.000 | 14.000)b (53.000 | 28.000)b (52.000 | 60.001)b (51.000 | 76.000)b (49.000 | 90.001)b (39.000 | 95.000)b (38.000 | 297.003)b (37.000 | 297.003)b (34.000 | 311.003)b (28.000 | 307.005)b (22.000 | 464.002)b (21.000 | 644.002)b (20.000 | 810.001)b (18.000 | 990.001)b (17.000 | 990.001)b (16.000 | 1007.002)b (12.000 | 1007.002)b (11.000 | 1039.002)b (9.000 | 1184.002)b (8.000 | 1336.000)b (6.000 | 1350.001)b (4.000 | 1350.001)b (2.000 | 1364.002)(G)
; LP calculated the cost

; Plan found with metric 6.000
; States evaluated so far: 5857
; States pruned based on pre-heuristic cost lower bound: 0
; Time 22.99
14.001: (take_image img8 mem0)  [14.000]
28.002: (analyse_image img8 mem0)  [32.000]
114.001: (take_image img18 mem1)  [14.000]
128.002: (analyse_image img18 mem1)  [32.000]
219.001: (take_image img2 mem2)  [14.000]
233.002: (analyse_image img2 mem2)  [32.000]
279.998: (dump_image img2 mem2)  [14.000]
293.999: (dump_image img18 mem1)  [14.000]
311.999: (take_image img14 mem1)  [14.000]
326.000: (analyse_image img14 mem1)  [32.000]
460.000: (dump_image img14 mem1)  [14.000]
474.001: (take_image img10 mem1)  [14.000]
488.002: (analyse_image img10 mem1)  [32.000]
616.001: (dump_image img10 mem1)  [14.000]
630.002: (dump_image img8 mem0)  [14.000]
644.003: (take_image img19 mem0)  [14.000]
764.000: (analyse_image img19 mem0)  [32.000]
796.001: (dump_image img19 mem0)  [14.000]
810.002: (take_image img15 mem0)  [14.000]
824.003: (analyse_image img15 mem0)  [32.000]
979.001: (take_image img5 mem1)  [14.000]
993.002: (dump_image img15 mem0)  [14.000]
1007.003: (take_image img23 mem0)  [14.000]
1021.004: (analyse_image img5 mem1)  [32.000]
1053.005: (analyse_image img23 mem0)  [32.000]
1193.999: (dump_image img5 mem1)  [14.000]
1211.999: (take_image img24 mem1)  [14.000]
1226.000: (analyse_image img24 mem1)  [32.000]
1336.001: (dump_image img24 mem1)  [14.000]
1350.002: (dump_image img23 mem0)  [14.000]
1364.003: (take_image img19 mem0)  [14.000]
1378.004: (analyse_image img19 mem0)  [32.000]
1516.001: (dump_image img19 mem0)  [14.000]
b (0.000 |
END