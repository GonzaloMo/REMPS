Number of literals: 563
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(image_score img16) has a finite lower bound: [0.000,inf]
(image_score img17) has a finite lower bound: [0.000,inf]
(image_score img18) has a finite lower bound: [0.000,inf]
(image_score img19) has a finite lower bound: [0.000,inf]
(image_score img20) has a finite lower bound: [0.000,inf]
(image_score img21) has a finite lower bound: [0.000,inf]
(image_score img22) has a finite lower bound: [0.000,inf]
(image_score img23) has a finite lower bound: [0.000,inf]
(image_score img24) has a finite lower bound: [0.000,inf]
(image_score img25) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var0(image_score img1)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var1(image_score img2)
- Must be >= -8.000
Recognised a monotonic-change-induced limit on -1.000*var16(image_score img17)
- Must be >= -11.000
Recognised a monotonic-change-induced limit on -1.000*var23(image_score img24)
- Must be >= -6.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 27.000, admissible cost estimate nan
b (26.000 | 8.000)b (25.000 | 22.000)b (24.000 | 54.001)b (23.000 | 76.000)b (21.000 | 114.000)b (20.000 | 134.000)b (19.000 | 148.001)b (18.000 | 180.002)b (17.000 | 180.002)b (16.000 | 450.001)b (15.000 | 474.000)b (14.000 | 474.000)b (13.000 | 504.000)b (12.000 | 518.001)b (11.000 | 550.002)b (10.000 | 550.002)b (9.000 | 682.002)b (7.000 | 810.001)b (5.000 | 900.001)b (4.000 | 932.002)b (3.000 | 976.000)(G)
; LP calculated the cost

; Plan found with metric 4.000
; States evaluated so far: 767
; States pruned based on pre-heuristic cost lower bound: 0
; Time 2.47
8.001: (take_image img17 mem0)  [14.000]
22.002: (analyse_image img17 mem0)  [32.000]
113.999: (dump_image img17 mem0)  [14.000]
134.001: (take_image img2 mem0)  [14.000]
148.002: (analyse_image img2 mem0)  [32.000]
262.000: (dump_image img2 mem0)  [14.000]
276.001: (take_image img8 mem0)  [14.000]
290.002: (analyse_image img8 mem0)  [32.000]
473.999: (dump_image img8 mem0)  [14.000]
504.001: (take_image img1 mem0)  [14.000]
518.002: (analyse_image img1 mem0)  [32.000]
622.000: (dump_image img1 mem0)  [14.000]
636.001: (take_image img8 mem0)  [14.000]
650.002: (analyse_image img8 mem0)  [32.000]
833.999: (dump_image img8 mem0)  [14.000]
886.001: (take_image img24 mem0)  [14.000]
900.002: (analyse_image img24 mem0)  [32.000]
976.001: (dump_image img24 mem0)  [14.000]

Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (26.000 | 8.000)b (25.000 | 22.000)b (24.000 | 54.001)b (23.000 | 76.000)b (22.000 | 148.001)b (21.000 | 180.002)b (20.000 | 180.002)b (19.000 | 270.001)b (17.000 | 270.001)b (16.000 | 518.001)b (15.000 | 550.002)b (14.000 | 550.002)b (13.000 | 630.001)b (11.000 | 630.001)
END