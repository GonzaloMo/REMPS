Number of literals: 233
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var0(image_score img1)
- Must be >= -8.000
Recognised a monotonic-change-induced limit on -1.000*var3(image_score img4)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var7(image_score img8)
- Must be >= -7.000
Recognised a monotonic-change-induced limit on -1.000*var8(image_score img9)
- Must be >= -9.000
Recognised a monotonic-change-induced limit on -1.000*var9(image_score img10)
- Must be >= -7.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 29.000, admissible cost estimate nan
b (28.000 | 32.000)b (27.000 | 32.000)b (26.000 | 46.001)b (25.000 | 46.001)b (24.000 | 72.001)b (23.000 | 104.002)b (22.000 | 137.000)b (21.000 | 151.001)b (20.000 | 183.002)b (19.000 | 183.002)b (18.000 | 183.002)b (17.000 | 197.003)b (16.000 | 229.004)b (15.000 | 229.004)b (14.000 | 275.006)b (13.000 | 358.000)b (11.000 | 372.001)b (9.000 | 386.002)b (7.000 | 400.003)b (5.000 | 552.001)b (4.000 | 563.000)b (3.000 | 577.001)b (2.000 | 609.002)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (28.000 | 32.000)b (28.000 | 0.000)b (27.000 | 32.000)b (26.000 | 46.001)b (25.000 | 46.001)b (24.000 | 72.001)b (23.000 | 104.002)b (22.000 | 137.000)b (21.000 | 151.001)b (20.000 | 183.002)b (19.000 | 183.002)b (18.000 | 183.002)b (17.000 | 197.003)b (16.000 | 229.004)b (15.000 | 229.004)b (15.000 | 217.001)b (14.000 | 249.002)b (13.000 | 281.003)b (11.000 | 372.001)b (9.000 | 386.002)b (7.000 | 400.003)b (5.000 | 552.001)b (4.000 | 596.001)b (3.000 | 628.002)b (2.000 | 718.000)(G)
; LP calculated the cost

; Plan found with metric 5.000
; States evaluated so far: 1067
; States pruned based on pre-heuristic cost lower bound: 0
; Time 1.66
0.000: (analyse_image img2 mem0)  [32.000]
35.999: (dump_image img2 mem0)  [14.000]
58.001: (take_image img8 mem0)  [14.000]
72.002: (analyse_image img8 mem0)  [32.000]
137.001: (take_image img4 mem2)  [14.000]
151.002: (analyse_image img4 mem2)  [32.000]
183.003: (take_image img10 mem3)  [14.000]
210.999: (take_image img1 mem4)  [14.000]
225.000: (analyse_image img1 mem4)  [32.000]
335.996: (analyse_image img10 mem3)  [32.000]
367.997: (dump_image img1 mem4)  [14.000]
381.998: (dump_image img10 mem3)  [14.000]
395.999: (dump_image img4 mem2)  [14.000]
568.000: (dump_image img8 mem0)  [14.000]
582.001: (take_image img9 mem0)  [14.000]
596.002: (analyse_image img9 mem0)  [32.000]
718.001: (dump_image img9 mem0)  [14.000]
b (0.000 |