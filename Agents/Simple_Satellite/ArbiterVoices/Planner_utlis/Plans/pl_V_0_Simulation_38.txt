Number of literals: 343
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var2(image_score img3)
- Must be >= -3.000
Recognised a monotonic-change-induced limit on -1.000*var3(image_score img4)
- Must be >= -8.000
Recognised a monotonic-change-induced limit on -1.000*var5(image_score img6)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var8(image_score img9)
- Must be >= -7.000
Recognised a monotonic-change-induced limit on -1.000*var10(image_score img11)
- Must be >= -7.000
Recognised a monotonic-change-induced limit on -1.000*var13(image_score img14)
- Must be >= -8.000
Recognised a monotonic-change-induced limit on -1.000*var14(image_score img15)
- Must be >= -8.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 57.000, admissible cost estimate nan
b (56.000 | 1.000)b (55.000 | 15.001)b (54.000 | 47.001)b (53.000 | 47.001)b (52.000 | 47.001)b (51.000 | 61.003)b (50.000 | 93.003)b (48.000 | 107.005)b (46.000 | 107.005)b (44.000 | 121.006)b (37.000 | 121.006)b (36.000 | 153.001)b (35.000 | 185.002)b (34.000 | 185.002)b (33.000 | 293.000)b (29.000 | 307.001)b (28.000 | 339.001)b (27.000 | 413.001)b (26.000 | 445.001)b (25.000 | 445.001)b (24.000 | 459.003)b (22.000 | 459.003)b (21.000 | 519.001)b (20.000 | 551.002)b (19.000 | 551.002)b (18.000 | 630.001)b (16.000 | 630.001)b (15.000 | 793.001)b (14.000 | 825.002)b (13.000 | 825.002)b (12.000 | 839.002)b (10.000 | 839.003)b (9.000 | 891.001)b (8.000 | 923.002)b (7.000 | 976.000)b (6.000 | 990.001)b (4.000 | 990.001)b (3.000 | 1004.002)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (56.000 | 1.000)b (55.000 | 15.001)b (45.000 | 9.000)b (44.000 | 39.000)b (43.000 | 53.001)b (43.000 | 46.000)b (42.000 | 53.001)b (41.000 | 85.002)b (41.000 | 67.002)b (40.000 | 99.003)b (40.000 | 99.002)b (39.000 | 131.004)b (38.000 | 131.004)b (37.000 | 153.001)b (37.000 | 145.000)b (36.000 | 153.001)b (35.000 | 185.002)b (34.000 | 270.001)b (32.000 | 270.001)b (31.000 | 284.001)b (29.000 | 284.002)b (28.000 | 293.000)b (27.000 | 307.001)b (26.000 | 339.001)b (25.000 | 433.001)b (24.000 | 465.001)b (23.000 | 465.001)b (22.000 | 479.003)b (20.000 | 479.003)b (19.000 | 519.001)b (18.000 | 551.002)b (17.000 | 551.002)b (16.000 | 630.001)b (14.000 | 630.001)b (13.000 | 644.002)b (11.000 | 644.002)b (10.000 | 891.001)b (9.000 | 923.002)b (8.000 | 976.000)b (7.000 | 990.001)b (5.000 | 990.001)b (4.000 | 1239.003)
END