Number of literals: 453
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(image_score img16) has a finite lower bound: [0.000,inf]
(image_score img17) has a finite lower bound: [0.000,inf]
(image_score img18) has a finite lower bound: [0.000,inf]
(image_score img19) has a finite lower bound: [0.000,inf]
(image_score img20) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var4(image_score img5)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var8(image_score img9)
- Must be >= -6.000
Recognised a monotonic-change-induced limit on -1.000*var9(image_score img10)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var11(image_score img12)
- Must be >= -10.000
Recognised a monotonic-change-induced limit on -1.000*var12(image_score img13)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var13(image_score img14)
- Must be >= -2.000
Recognised a monotonic-change-induced limit on -1.000*var15(image_score img16)
- Must be >= -9.000
Recognised a monotonic-change-induced limit on -1.000*var16(image_score img17)
- Must be >= -6.000
Recognised a monotonic-change-induced limit on -1.000*var18(image_score img19)
- Must be >= -6.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 56.000, admissible cost estimate nan
b (55.000 | 45.000)b (54.000 | 59.001)b (53.000 | 91.002)b (52.000 | 91.002)b (50.000 | 114.000)b (49.000 | 185.000)b (48.000 | 199.001)b (47.000 | 231.002)b (46.000 | 231.002)b (45.000 | 245.003)b (44.000 | 277.004)b (43.000 | 277.004)b (42.000 | 277.004)b (41.000 | 291.005)b (39.000 | 291.005)b (37.000 | 305.006)b (36.000 | 319.006)b (35.000 | 351.008)b (34.000 | 351.008)b (33.000 | 365.008)b (32.000 | 397.010)b (31.000 | 406.000)b (30.000 | 420.001)b (29.000 | 452.001)b (28.000 | 452.001)b (27.000 | 466.003)b (25.000 | 466.003)b (24.000 | 480.003)b (22.000 | 480.004)b (21.000 | 571.001)b (20.000 | 603.002)b (19.000 | 610.000)b (18.000 | 624.001)b (17.000 | 656.002)b (16.000 | 656.002)b (15.000 | 707.001)b (14.000 | 739.002)b (13.000 | 796.000)b (12.000 | 810.001)b (10.000 | 810.001)b (9.000 | 824.002)b (7.000 | 824.002)b (6.000 | 838.002)b (4.000 | 838.003)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (55.000 | 45.000)b (54.000 | 59.001)b (54.000 | 46.000)b (53.000 | 59.001)b (52.000 | 91.002)b (51.000 | 199.001)b (50.000 | 231.002)b (49.000 | 231.002)b (48.000 | 245.003)b (47.000 | 277.004)b (46.000 | 277.004)b (45.000 | 277.004)b (44.000 | 291.005)b (42.000 | 291.005)b (41.000 | 305.006)b (39.000 | 305.006)b (38.000 | 351.008)b (37.000 | 351.008)b (36.000 | 365.008)b (35.000 | 397.010)b (34.000 | 406.000)b (33.000 | 420.001)b (32.000 | 452.001)b (31.000 | 452.001)b (30.000 | 466.003)b (28.000 | 466.003)b (27.000 | 480.003)b (25.000 | 480.004)b (24.000 | 571.001)b (23.000 | 603.002)b (22.000 | 610.000)b (21.000 | 624.001)b (20.000 | 656.002)b (19.000 | 656.002)b (18.000 | 707.001)b (17.000 | 739.002)b (16.000 | 796.000)b (15.000 | 810.001)b (13.000 | 810.001)b (12.000 | 824.002)b (10.000 | 824.002)b (9.000 | 838.002)b (7.000 | 838.003)b (6.000 | 990.001)b (4.000 | 990.001)b (3.000 | 1004.002)b (2.000 | 1050.004)(G)
; LP calculated the cost

; Plan found with metric 9.000
; States evaluated so far: 5780
; States pruned based on pre-heuristic cost lower bound: 0
; Time 36.13
45.001: (take_image img14 mem0)  [14.000]
59.002: (analyse_image img14 mem0)  [32.000]
185.001: (take_image img9 mem1)  [14.000]
199.002: (analyse_image img9 mem1)  [32.000]
231.993: (take_image img5 mem2)  [14.000]
245.994: (analyse_image img5 mem2)  [32.000]
277.995: (dump_image img5 mem2)  [14.000]
291.996: (dump_image img9 mem1)  [14.000]
305.997: (take_image img19 mem1)  [14.000]
319.998: (analyse_image img19 mem1)  [32.000]
351.999: (take_image img10 mem2)  [14.000]
374.000: (analyse_image img10 mem2)  [32.000]
406.001: (take_image img16 mem3)  [14.000]
420.002: (analyse_image img16 mem3)  [32.000]
459.998: (dump_image img16 mem3)  [14.000]
473.999: (dump_image img10 mem2)  [14.000]
557.001: (take_image img12 mem2)  [14.000]
571.002: (analyse_image img12 mem2)  [32.000]
610.001: (take_image img13 mem3)  [14.000]
624.002: (analyse_image img13 mem3)  [32.000]
693.001: (take_image img17 mem4)  [14.000]
707.002: (analyse_image img17 mem4)  [32.000]
805.997: (dump_image img17 mem4)  [14.000]
819.998: (dump_image img13 mem3)  [14.000]
833.999: (dump_image img12 mem2)  [14.000]
1013.999: (dump_image img19 mem1)  [14.000]
1330.001: (take_image img13 mem1)  [14.000]
1344.002: (dump_image img14 mem0)  [14.000]
1358.003: (take_image img3 mem0)  [14.000]
1372.004: (analyse_image img3 mem0)  [32.000]
1516.001: (dump_image img3 mem0)  [14.000]
b (0.000 | 1530.001)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)
END