Number of literals: 233
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var1(image_score img2)
- Must be >= -5.000
Recognised a monotonic-change-induced limit on -1.000*var2(image_score img3)
- Must be >= -11.000
Recognised a monotonic-change-induced limit on -1.000*var4(image_score img5)
- Must be >= -11.000
Recognised a monotonic-change-induced limit on -1.000*var6(image_score img7)
- Must be >= -10.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 40.000, admissible cost estimate nan
b (39.000 | 7.000)b (38.000 | 21.001)b (37.000 | 53.001)b (36.000 | 63.000)b (35.000 | 77.001)b (34.000 | 109.002)b (33.000 | 109.002)b (31.000 | 123.003)b (29.000 | 123.003)b (28.000 | 210.001)b (27.000 | 242.002)b (26.000 | 242.002)b (24.000 | 270.001)b (23.000 | 270.001)b (21.000 | 270.001)b (19.000 | 284.001)b (14.000 | 284.002)b (13.000 | 627.002)b (12.000 | 627.002)b (11.000 | 630.000)b (10.000 | 644.001)b (9.000 | 676.002)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (39.000 | 7.000)b (38.000 | 21.001)b (29.000 | 15.000)b (28.000 | 63.000)b (27.000 | 77.001)b (26.000 | 109.002)b (25.000 | 109.002)b (24.000 | 210.001)b (23.000 | 242.002)b (22.000 | 242.002)b (21.000 | 270.001)b (21.000 | 270.000)b (20.000 | 270.001)b (18.000 | 270.001)b (17.000 | 284.001)b (16.000 | 316.003)b (16.000 | 316.002)b (15.000 | 450.001)b (13.000 | 450.001)b (12.000 | 595.001)b (11.000 | 627.002)b (10.000 | 627.002)b (9.000 | 641.002)b (7.000 | 641.003)b (6.000 | 846.003)b (5.000 | 1006.003)b (4.000 | 1020.003)b (3.000 | 1350.001)b (2.000 | 1410.003)b (2.000 | 1396.003)(G)
; LP calculated the cost

; Plan found with metric 5.000
; States evaluated so far: 8905
; States pruned based on pre-heuristic cost lower bound: 0
; Time 31.32
63.001: (take_image img2 mem0)  [14.000]
77.002: (analyse_image img2 mem0)  [32.000]
196.001: (take_image img7 mem1)  [14.000]
210.002: (analyse_image img7 mem1)  [32.000]
263.998: (dump_image img7 mem1)  [14.000]
277.999: (take_image img5 mem2)  [14.000]
441.998: (analyse_image img5 mem2)  [32.000]
473.999: (dump_image img5 mem2)  [14.000]
581.001: (take_image img3 mem1)  [14.000]
595.002: (analyse_image img3 mem1)  [32.000]
653.999: (dump_image img3 mem1)  [14.000]
786.001: (take_image img1 mem1)  [14.000]
800.002: (analyse_image img1 mem1)  [32.000]
833.999: (dump_image img1 mem1)  [14.000]
946.001: (take_image img8 mem1)  [14.000]
960.002: (analyse_image img8 mem1)  [32.000]
1013.999: (dump_image img8 mem1)  [14.000]
1146.001: (take_image img1 mem1)  [14.000]
1160.002: (analyse_image img1 mem1)  [32.000]
1193.999: (dump_image img1 mem1)  [14.000]
1336.001: (dump_image img2 mem0)  [14.000]
1350.002: (take_image img5 mem0)  [14.000]
1364.003: (analyse_image img5 mem0)  [32.000]
1516.001: (dump_image img5 mem0)  [14.000]
b (0.000 | 1530.001)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)(G)
END