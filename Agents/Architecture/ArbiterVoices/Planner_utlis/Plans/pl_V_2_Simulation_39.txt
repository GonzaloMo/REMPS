Number of literals: 343
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
(image_score img11) has a finite lower bound: [0.000,inf]
(image_score img12) has a finite lower bound: [0.000,inf]
(image_score img13) has a finite lower bound: [0.000,inf]
(image_score img14) has a finite lower bound: [0.000,inf]
(image_score img15) has a finite lower bound: [0.000,inf]
(total_score) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Seeing if metric is defined in terms of task vars or a minimal value of makespan
- Yes it is
Recognised a monotonic-change-induced limit on -1.000*var0(image_score img1)
- Must be >= -1.000
Recognised a monotonic-change-induced limit on -1.000*var1(image_score img2)
- Must be >= -13.000
Recognised a monotonic-change-induced limit on -1.000*var2(image_score img3)
- Must be >= -12.000
Recognised a monotonic-change-induced limit on -1.000*var3(image_score img4)
- Must be >= -10.000
Recognised a monotonic-change-induced limit on -1.000*var7(image_score img8)
- Must be >= -1.000
66% of the ground temporal actions in this problem are compression-safe
Initial heuristic = 45.000, admissible cost estimate nan
b (44.000 | 31.000)b (43.000 | 45.001)b (42.000 | 77.002)b (41.000 | 77.002)b (39.000 | 91.003)b (38.000 | 101.000)b (31.000 | 101.000)b (30.000 | 115.001)b (29.000 | 147.002)b (28.000 | 163.001)b (27.000 | 195.002)b (26.000 | 195.002)b (25.000 | 217.001)b (24.000 | 249.002)b (23.000 | 256.000)b (22.000 | 270.001)b (20.000 | 270.001)b (19.000 | 284.001)b (17.000 | 284.002)b (14.000 | 298.003)b (13.000 | 339.001)b (12.000 | 371.001)b (11.000 | 436.000)b (10.000 | 560.001)b (9.000 | 592.002)b (8.000 | 616.000)b (7.000 | 630.001)b (5.000 | 630.001)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (44.000 | 31.000)b (43.000 | 45.001)b (42.000 | 77.002)b (41.000 | 77.002)b (39.000 | 91.003)b (32.000 | 91.003)b (31.000 | 101.000)b (30.000 | 115.001)b (29.000 | 147.002)b (28.000 | 163.001)b (27.000 | 195.002)b (26.000 | 195.002)b (25.000 | 217.001)b (24.000 | 249.002)b (23.000 | 256.000)b (22.000 | 270.001)b (20.000 | 270.001)b (19.000 | 284.001)b (17.000 | 284.002)b (16.000 | 339.001)b (15.000 | 371.001)b (14.000 | 436.000)b (13.000 | 450.001)b (11.000 | 450.001)b (10.000 | 560.001)b (9.000 | 592.002)b (8.000 | 616.000)b (7.000 | 630.001)b (5.000 | 630.001)b (4.000 | 1040.002)b (4.000 | 842.002)b (4.000 | 839.003)b (3.000 | 990.001)b (2.000 | 1040.002)(G)
; LP calculated the cost

; Plan found with metric 6.000
; States evaluated so far: 6697
; States pruned based on pre-heuristic cost lower bound: 0
; Time 29.80
31.001: (take_image img9 mem0)  [14.000]
45.002: (analyse_image img9 mem0)  [32.000]
87.000: (dump_image img9 mem0)  [14.000]
101.001: (take_image img4 mem0)  [14.000]
115.002: (analyse_image img4 mem0)  [32.000]
156.999: (take_image img2 mem1)  [14.000]
171.000: (analyse_image img2 mem1)  [32.000]
210.999: (take_image img1 mem2)  [14.000]
225.000: (analyse_image img1 mem2)  [32.000]
279.998: (dump_image img1 mem2)  [14.000]
293.999: (dump_image img2 mem1)  [14.000]
325.001: (take_image img8 mem1)  [14.000]
339.002: (analyse_image img8 mem1)  [32.000]
473.999: (dump_image img8 mem1)  [14.000]
546.001: (take_image img3 mem1)  [14.000]
560.002: (analyse_image img3 mem1)  [32.000]
653.999: (dump_image img3 mem1)  [14.000]
779.001: (take_image img10 mem1)  [14.000]
793.002: (analyse_image img10 mem1)  [32.000]
833.999: (dump_image img10 mem1)  [14.000]
1167.000: (dump_image img4 mem0)  [14.000]
1181.001: (take_image img4 mem0)  [14.000]
1195.002: (analyse_image img4 mem0)  [32.000]
1336.001: (dump_image img4 mem0)  [14.000]
b (0.000 |
END