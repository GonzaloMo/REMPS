Number of literals: 13
Constructing lookup tables: [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
Post filtering unreachable actions:  [10%] [20%] [30%] [40%] [50%] [60%] [70%] [80%] [90%] [100%]
(total_score) has a finite lower bound: [0.000,inf]
(image_score img1) has a finite lower bound: [0.000,inf]
(image_score img2) has a finite lower bound: [0.000,inf]
(image_score img3) has a finite lower bound: [0.000,inf]
(image_score img4) has a finite lower bound: [0.000,inf]
(image_score img5) has a finite lower bound: [0.000,inf]
(image_score img6) has a finite lower bound: [0.000,inf]
(image_score img7) has a finite lower bound: [0.000,inf]
(image_score img8) has a finite lower bound: [0.000,inf]
(image_score img9) has a finite lower bound: [0.000,inf]
(image_score img10) has a finite lower bound: [0.000,inf]
Have identified that bigger values of (total_score) are preferable
Have identified that bigger values of (image_analysed img1) are preferable
Have identified that bigger values of (image_unanalysed img1) are preferable
Have identified that bigger values of (image_analysed img2) are preferable
Have identified that bigger values of (image_unanalysed img2) are preferable
Have identified that bigger values of (image_analysed img3) are preferable
Have identified that bigger values of (image_unanalysed img3) are preferable
Have identified that bigger values of (image_analysed img4) are preferable
Have identified that bigger values of (image_unanalysed img4) are preferable
Have identified that bigger values of (image_analysed img5) are preferable
Have identified that bigger values of (image_unanalysed img5) are preferable
Have identified that bigger values of (image_analysed img6) are preferable
Have identified that bigger values of (image_unanalysed img6) are preferable
Have identified that bigger values of (image_analysed img7) are preferable
Have identified that bigger values of (image_unanalysed img7) are preferable
Have identified that bigger values of (image_analysed img8) are preferable
Have identified that bigger values of (image_unanalysed img8) are preferable
Have identified that bigger values of (image_analysed img9) are preferable
Have identified that bigger values of (image_unanalysed img9) are preferable
Have identified that bigger values of (image_analysed img10) are preferable
Have identified that bigger values of (image_unanalysed img10) are preferable
Have identified that smaller values of (memory_level) are preferable
Recognised a monotonic-change-induced limit on -1.000*var3(image_score img1)
- Must be >= 0.000
Recognised a monotonic-change-induced limit on -1.000*var6(image_score img2)
- Must be >= -6.000
Recognised a monotonic-change-induced limit on -1.000*var9(image_score img3)
- Must be >= -8.000
Recognised a monotonic-change-induced limit on -1.000*var12(image_score img4)
- Must be >= 0.000
Recognised a monotonic-change-induced limit on -1.000*var15(image_score img5)
- Must be >= -9.000
Recognised a monotonic-change-induced limit on -1.000*var18(image_score img6)
- Must be >= -4.000
Recognised a monotonic-change-induced limit on -1.000*var21(image_score img7)
- Must be >= -10.000
Recognised a monotonic-change-induced limit on -1.000*var24(image_score img8)
- Must be >= -11.000
Recognised a monotonic-change-induced limit on -1.000*var27(image_score img9)
- Must be >= -7.000
Recognised a monotonic-change-induced limit on -1.000*var30(image_score img10)
- Must be >= -9.000
None of the ground temporal actions in this problem have been recognised as compression-safe
Initial heuristic = 85.000, admissible cost estimate 0.000
b (84.000 | 6.000)b (83.000 | 9.000)b (81.000 | 20.001)b (79.000 | 52.002)b (77.000 | 73.001)b (76.000 | 90.000)b (75.000 | 97.000)
Resorting to best-first search
Running WA* with W = 5.000, not restarting with goal states
b (84.000 | 6.000)b (83.000 | 9.000)b (81.000 | 20.001)b (79.000 | 52.002)b (77.000 | 73.001)b (76.000 | 90.000)b (75.000 | 97.000)b (73.000 | 118.002)b (71.000 | 150.003)b (69.000 | 150.003)b (68.000 | 193.001)b (67.000 | 205.000)b (65.000 | 233.002)b (64.000 | 457.000)b (63.000 | 265.003)b (62.000 | 457.000)b (62.000 | 347.000)b (60.000 | 378.002)b (58.000 | 411.001)b (57.000 | 419.000)b (55.000 | 433.001)b (53.000 | 433.001)b (51.000 | 447.001)b (50.000 | 457.000)b (48.000 | 479.003)b (46.000 | 479.003)b (44.000 | 493.003)